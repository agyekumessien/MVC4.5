@model MainProgram.Edm.AspNetUser

@{
    ViewBag.Title = "UpdateProfilePicAsync";
    Layout = "~/Views/Shared/_LayoutSub.cshtml";
}

<link href="~/Content/Intellisence/css/jquery-ui.min.css" rel="stylesheet" />
<script src="~/Content/Intellisence/js/jquery-1.10.2.min.js"></script>
<script src="~/Content/Intellisence/js/jquery-ui.min.js"></script>
<script src="~/Content/lib/profile.js"></script>


<div class="content-wrapper" style=" margin-left: 0px; width:100%; top:0px;  background-color:#fff; border:none;">

    <section class="content-header" style="margin-left:0px">

        <!-- left sidebar-->



        <div class="left" style="width: 17%; float:left; top:0px;  background-color:#fff; border:none;">
            <div class="Container">
                <div class="col-md-4">
                    <div class="container">
                        <div class="panel panel-default" style="width: 20%">
                          



                            </div>
                    </div>
                </div>
            </div>
        </div>





        <!--End Of Left-->
        <!-- Right-->


        <div class="right"
             style="width: 21%; float:right; margin-right:8px; padding-right:8px; top:0px; background-color:#fff; border:none;">
            <div class="Container">
                <div class="col-md-4">
                    <div class="container">
                        <div class="panel panel-default" style="width: 22%">






                        </div>
                    </div>
                </div>
            </div>
        </div>





        <!--MID Sidebar Main content-->
        <div class="Mid-sidebar" style="margin-right:10px; padding-right:0px; text-align:center">
            <div class="panel panel-default" style="width: 100%; margin-left: 0px;">

                @using (Html.BeginForm("UpdateProfilePicAsync", "Account", FormMethod.Post, new { enctype = "multipart/Form-data" }))
                { @Html.HiddenFor(model => model.Id)
                  
                    <div class="form-horizontal">

                        <section class="content-header" style="margin-left:0px; top:0px;">

                            <p style="text-align:center; font-size:20px">Personal Information</p>
                            <div class="card card-body block">
                                <strong style="font-size:x-large"><b>Profile</b></strong>
                                <br />
                                <img src="~/Content/images/user/user_l_blue.png" />

                               

                            </div>



                        </section>

                        <div class="row" style="padding-left:35%; padding-top:15px">

                            <div class="col-md-6">
                                <div class="aa-checkout-single-bill">
                                    
                                    
                                    <br/><br />
                            @*   <img id="profpicfile" name="profpicfile" src="data:image;base64,@System.Convert.ToBase64String(@Model.UserPhoto)" class="img-circle w-100" alt="" style="width:80px; height:80px" />   *@
                                    @*<img id="profpicfile" name="profpicfile" src="" class="img-circle w-100" alt="" style="width:80px; height:80px" />
                                        <span>
                                            <img id="profpicfile" name="profpicfile" src="" class="img-circle w-100" alt="" />
                                            <img id="profpicfile" name="profpicfile" src="data:image;base64,@System.Convert.ToBase64String(@Model.UserPhoto)" class="img-circle w-100" alt="" style="width:80px; height:80px" />*@

                                    @*<img id="profpicfile" name="profpicfile" src="~/Content/img/ApparelImages/Essien.jpg" class="img-circle" alt="User Image" style="width:80px; height:80px" />
                                        </span> *@


                                    @*
                                                <div class="btn lightgrey btn-lg" href="">
                                                <input type="file" name="imgFile" id="poImgFile" />
                                                <input onclick="triggerInput()" type="submit" value="Upload" class="btn btn-default" />


                                            </div>



                                        <div class="form-group" style="color:white">
                                            @Html.LabelFor(m => m.UserPhoto, new { @class = "control-label col-md-2" })
                                            @Html.ValidationMessageFor(m => m.UserPhoto, "", new { @class = "text-danger" })
                                            <div class="col-md-10">
                                                <input type="file" name="UserPhoto" id="fileUpload" accept=".png,.jpg,.jpeg,.gif,.tif" style="color:white; display:none" />
                                                <!-- <input type="file" name="UserPhoto" id="fileUpload" accept="image/*" required />-->

                                            </div>
                                        </div>*@





                                </div>



                            </div>

                        </div>





                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                       
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", placeholder = "birth date", required = "required" } })
                                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", placeholder = "country", required = "required" } })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2"})
                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                            <div class="col-md-10">
                                <input type="file" name="Image" id="fileUpload" accept=".png,.jpg,.jpeg,.gif,.tif" required="required" />
                                <!-- <input type="file" name="UserPhoto" id="fileUpload" accept="image/*" required />-->

                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                   



               

                        <div id="hasd" class="form-group">

                            <div id="hasd" class="col-md-12">
                                @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control  Blue" } })
                                @Html.EditorFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "form-control  Blue" } })
                            </div>
                        </div>

                        

                   @* <div class="form-group">
                        @Html.LabelFor(model => model.UserPhoto, htmlAttributes: new { @class = "BlueC col-md-2" })
                        <div class="col-md-10">
                          
                            @Html.EditorFor(model => @model.UserPhoto, new { htmlAttributes = new { @class = "Blue" } })
                            @Html.ValidationMessageFor(model => model.UserPhoto, "", new { @class = "text-danger" })
                        </div>
                    </div> *@
                    
                    
                    

</div>
}

            </div>
        </div>


    </section>



</div>


<style>
    .content-wrapper {
        margin-top: 0%;
        margin-left: 0%;
        background-position: top;
    }

    #left {
        width: 20%;
        margin-left: 0%;
        margin-top: 0%;
        background-position: top;
        position: relative;
        background-color: #eee3e3;
    }



    .Mid-sidebar {
        content: " ";
        margin-top: 0%;
        width: 60%;
        overflow: no-display;
        padding-right: 0px;
        margin-left: 20%;
        margin-right: 0%;
        background-position: top;
        margin-bottom: 0px;
        background-color: #fff;
    }


    .SiteT {
        width: 100%;
        border: none;
        margin-right: 0px;
        padding-right: 0px;
    }

   
    .Blue{
        color:white;
        border: none;
        font-size:5px;
        border-color:#fff;
        background-color:#fff;
    }

#hasd{
 color:white;
 border: none;
   border-color:#fff;
        background-color:#fff;

}


    .main--container {
        margin-left: 17px;
    }
</style>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



<script type="text/javascript">
    function triggerInput() {
        $("#profpicfile").trigger('click');
    };
   
    function onFileChanged(event) {
        if (event.poImgFile && event.poImgFile[0]) {
            let reader = new FileReader();
            let file = event.poImgFile[0];
            updateProfileForm.profpicfile = file;
            reader.readAsDataURL(file)
            reader.onload = function (event) {
                $("#profpic").find('img').attr('src', reader.result)
            };
        }
    }
        </script>